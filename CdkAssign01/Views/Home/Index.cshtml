@model CdkAssign01.Models.OrdersViewModel

@{
    ViewBag.Title = "Orders Lookup";
}

<br />

@*
    FEEDBACK: Instead of using Html.EndForm method to close your form
    you can wrap the Html.BeginForm method in a using statement. When 
    execution leaves the using block, the Html.EndForm method will be 
    called for you.
    
    @using (Html.BeginForm())
    {
    }
*@

@{ Html.BeginForm("Lookup", "Home"); }
<div class="row">
    <div class="col-md-3">
        @* FEEDBACK: I think I would have just used raw HTML markup here.

        <label>Desired Customer Id:</label>
        <input name="myDesiredCustomerId" class="form-control" style="width: 150px;" />

        *@
        @Html.Label("Desired Customer Id: ")
        @Html.TextBox("myDesiredCustomerId", "", new { @class = "form-control", style = "width: 150px;" })
    </div>

    <div class="col-md-3">
        <br />
        <input type="submit" value="Lookup" class="btn" />
        <span>&nbsp;</span>
        @Html.ActionLink("Reset", "Index", "Home")
    </div>
</div>

@{ Html.EndForm(); }

@if (Model != null)
{

    @*
    FEEDBACK: You could wrap this markup in an "if" statement
        so you only render it if there's a message to display.    
    *@    
    <div class="row">
        <div class="col-md-12">
            <span style="color: red">@Model.Message</span>
        </div>
    </div>

    if (Model.Customer.IsValidCustomer)
    {
        <hr />
        <div class="row">
            <div class="col-md-12">
                Customer: @Model.Customer.FirstName @Model.Customer.LastName
            </div>
        </div>
    }

    if (Model.Orders.Count() > 0)
    {
        <hr />
        <div class="row">
            <table>
                <thead>
                    <tr>
                        <th>Customer</th>
                        <th>Order</th>
                        <th>Make</th>
                        <th>Model</th>
                        <th>Color</th>
                        <th>Year</th>
                        <th>Ownership</th>
                    </tr>
                </thead>
                @foreach (var order in Model.Orders)
                {
                    <tr>
                        <td>@order.CustomerId</td>
                        <td>@order.OrderId</td>
                        <td>@order.Make</td>
                        <td>@order.Model</td>
                        <td>@order.Color</td>
                        <td>@order.Year</td>
                        <td>@order.OwnershipType</td>


                    </tr>
                }
            </table>

        </div>

    }

}

